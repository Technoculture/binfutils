# -*- coding: utf-8 -*-
"""Cluster1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OMOLouQM9822WMYtFOf5Gn8qcfyOd-87
"""

!pip install Bio

from Bio import SeqIO
from sklearn.cluster import KMeans
import numpy as np
import warnings

sequences = []
max_seq_length = 0

for record in SeqIO.parse('/content/out_1.fasta', 'fasta'):
    sequence = str(record.seq)
    sequences.append(sequence)
    seq_length = len(sequence)
    if seq_length > max_seq_length:
        max_seq_length = seq_length

n_sequences = len(sequences)
nucleotides = ['A', 'C', 'G', 'T']
nucleotide_map = {nucleotide: index for index, nucleotide in enumerate(nucleotides)}
encoded_sequences = np.full((n_sequences, max_seq_length), -1, dtype=int)
for i, sequence in enumerate(sequences):
    seq_length = len(sequence)
    for j, nucleotide in enumerate(sequence):
        index = nucleotide_map.get(nucleotide, -1)
        encoded_sequences[i, j] = index

n_clusters = 500
with warnings.catch_warnings():
    warnings.filterwarnings("ignore", category=FutureWarning)
    kmeans = KMeans(n_clusters=n_clusters, random_state=42, n_init=10)
    cluster_labels = kmeans.fit_predict(encoded_sequences)

clusters = {i: [] for i in range(n_clusters)}
for i, label in enumerate(cluster_labels):
    clusters[label].append(sequences[i])

for cluster_id, sequences in clusters.items():
    print(f'Cluster {cluster_id + 1}:')
    for sequence in sequences:
        print(sequence)
    print()







